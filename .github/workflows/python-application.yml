name: CI & Release
on:
  push:
    branches: ["main"]
    tags:
      - "v*.*.*" # Trigger release on version tags
  pull_request:
    branches: ["main"]
permissions:
  contents: write # needed for creating GitHub releases
  id-token: write # needed for PyPI trusted publishing (optional)
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Set OPENWEATHER_API_KEY
        run: echo "OPENWEATHER_API_KEY=${{ secrets.OPENWEATHER_API_KEY }}" >> $GITHUB_ENV
      - name: Install package and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build  # Add build package
          pip install .[test]
      - name: Run tests with coverage
        run: |
          pytest -s tests/ --cov=weathora --cov-report=xml --cov-report=html
      - name: Build distributions
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          python -m build
      - name: Upload distributions (artifact)
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/
      - name: Upload coverage HTML (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: htmlcov
  # --- Release to GitHub ---
  release:
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
      - name: Download distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: dist/* # âœ… Attach built dists to the release
  # --- Publish to PyPI ---
  pypi-publish:
    runs-on: ubuntu-latest
    needs: release
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: ${{ secrets.PYPI_USERNAME }}
          password: ${{ secrets.PYPI_PASSWORD }}
          packages-dir: dist/
